package jbok.crypto

import java.math.BigInteger
import java.security.SecureRandom

import jbok.JbokSpec
import org.bouncycastle.crypto.generators.ECKeyPairGenerator
import org.bouncycastle.crypto.params.ECKeyGenerationParameters
import ECIES._
import cats.effect.IO
import scodec.bits._

class ECIESSpec extends JbokSpec {
  "ECIES" should {
    "decrypt" in {
      val generator = new ECKeyPairGenerator
      val secureRandom = new SecureRandom()
      generator.init(new ECKeyGenerationParameters(curve, secureRandom))

      val pubBytes = hex"0395e5903e0e732f8db854d63314ef1926ccadda6cf77c5052638d5ccb00d74af5".toArray
      val pub = curve.getCurve.decodePoint(pubBytes)
      val prvBytes = hex"00bc9551eeccd2b1189e24e18ca1482ed69080ac69b67c2a17bc1e44e79a1390c3".toArray
      val prv = new BigInteger(1, prvBytes)

      val plainText = hex"ea9f99ea8b9ee6ae8de3abb4e5948ee9b789e0aca1e9b3a4e5a2b7e38292e994b9e7a8aeec9180e6aea4e8809eea9181e595a4eba985e598a7e98d99eab8a6eb8496e394bde3b28ee1aea6e2b0bfec8cbbe1b493e5a094e794b5e1a0a9e79a89e7a895e69494e6be89e7b19fe6a081ebabb2e69481e9989be2a09fe7ae84e7aba2ed97b7e5acb6e2b996e7aabbeb95b3e5aa83ec91b3e986bbe39d81ed8c8be0aaaee89e85e597ace58b81e9bb9de2aea5ed8997ea88ace5adb9eb92a6e7b6aee1b9bbe0bf9cd8a1e1abb3e5a8a5cfb9ea9192e3a68bec98bce5978ae4a1b2e8a0aaeab98fed9881e3a089e7bf9cecba97e7afb6e0b69de29699ebb989e4b785e5b589ebb388ed8992e9a3b8eb8fa2e4bfa2e4a781e39abce7a896e1a687e48588e181b9eb8ea4ebb1b8e8b0a9e9bb86e7b38be9ab84e5b5a8e69783ec8cb9ebbcabe68ca5e180a0e990b5e799a4e499aaec958bec81ace4b58ced9d94e281bde292aceb8f86ed9cace188a7e594b4e883bfca93ebb3b5e99591e8a292e1958764e29cabeab5b5e2bab6c5a3e0b681e7bc91e78db7e884a4e1968cea8aa6e1a8a0e4a880e7b1a0e79eaae1a897e9bb8ce8b19beaabaae381bae4bfb5e5aeb9ed8189cbb0ec99b2e68b9be9a2aae384a1ed8dbde8aca0e3b1a0e5859de993a3e38b8ae5b7b1cc84e19190e284bfe18aa5e99db9e38f8aeaae8ee6adb7e9a093ecae8fe6beafeab0bbe7968de1b7a9e38296ecb99be8ac87e2abb0e4ada2ec9698e184a3ea9787e882bce2bda7e68587e5b6b0ea8d9be9a8a0eaa9bfe8ab8aeab1b7e29f8ce386a2e1a58bea8f9ae88ebee5839be1998ae3a585e584bfe89e8ee4b6b4e69caae5ad97e5859feb8dbbebb6ace497ace7ada8ed9da8e7a099eabda3e786a1e7a6a4ec8ca4e7968de38a8ce2a3a5e4b8a2ec90a4ea88aae4bd82e98bbaecb8b5e19397e384b9e5bbbceaa58de58090e783b9ea8aa5e0af8ae882b7e0bdade1a18beabd9ae883a5e3918be2b9a5e8b4b3ed91a8cca8ebb7bfeb81abeca8a6eab6b6e9b0bdecb2b6e48e80e6a8acec86a6e4afb5ec8d91e48f94e19483e8a2bde7829ce799b4eaa68be78dabe395b5c3bae19298e389a6e38dbbd59ee5b994e8b4ade1ae9ce88bbae8b487e3bcb4e2a19ee9a7adebbdafe78082e6999de2babfed83a2e4a6bce180a2d8a5ea9c98eab1a1ebb9abe8bcb1e880b3ec96bde49b80ecb38ee2a18eecbfaee58b95e9a88fe19c9eeabb89dfbde8b893e2a09fd88ee0a687e4acb9e5b0b1e5b2b1e48993ecb397e886bfe888b2e6b583e0bc84e18fbbed8a94e78981e3b194e2b890e590afebbab5e3a19beab796e8a693e98580e69eb7e2839fea8f87e891a3e5848aec809eeb9c90ea9abce7b8bee883a2e3b189e2ada0eaa486e592b8e2b5aee295b1ec9ea9e78dbfe5a384ec9ebce4978ce290b4eb9a8aeab4b6e6b08be6b1b3e0a0ace6a9a3e0a788e5bbb5e1b29ce585a1e8b895e499bcceb9eca491e293bde6a1bfea82a8e0a9bbeb8f92e0bf81c297e295bfe4bebce8beaeed9fb4e7adb9e1be99e7b98ae699a3e7a8a2e58188e6b09cc993de82ec9389ea87a0ec9d97e7aa8fe98c91e0afbce197b3e8a5b8e2a7afeb9abeeb9989e1bc93eb9ab4e888adeb968bec83b6ecadb2e5aaa5d383e58086eb918be28eabc5a1ecae9aeb9da7ec9da0e0a394e69d83e58488e59aaae3af97ec8f8beb82bde7b297e79c86e0b5bee7b1a7e398adeab69de4a2b8e383b8e0adb1c9b1e2ac89e5a0a8e6b8a7e2a19ae6a693e0b69ce4bab7e9b5b3e9a18ceaac8fe7bda8e6b290e196a9e9b695eabfb8ec9fa8e9bd89e78e93e0b586e29a92e39d83e6a7a5e7a1b9e38f8de5ae92e7a5a8e2aeb7c7afe6b58be19cbae4a7b8eba193ecb987e4aabee29781e487abe7a7ace292aae59690eb809ce5be96eb90a6e5bfafeba8b6e99984eb9d90e3b099e0ac86e3a19ce39c9eebab98e991a1ed92b5e5a8b4eb8face0a890e787a4ec8eb4e6958be298a5ed869ce587bbe981a2e0b9b5e89f8fe3b581ed8abfe0a680e38c81d09ae795a8e9aab1e0afa3e496b5e4af8ce7bcaa".toArray
      val providedCryptogram = hex"0448341f4403b8780fff8fecaabd79b917c94230f9ab19f9d2921129b504568a707e6e1dc1e5c5ffa026a546db9a2591e55c4c15135c1de41e7dc1251604add380720d70fdf88f465f84c881a5500dbde47848683ddf6739b778d13d7f08e991c9aa9a4798d6081c5581781e851912b3113c182d5506b0a172fc8e20bb08fe385cd6cc065478ec4807438156068eb1c1629761079b4c12d9fa875a95014920054ce7c918a16af9b03136c513762f72a9c3ef4665ccf69032e0964c77dee159876e287712bf458216ff1c710672218cd5d027dbfaffcff60b871d616439c76e0371ec64fb7e6761140850721d85a04e82d50138f147c2b029bfa3f6f9323054f36714c6a012de92875ce367bcd781131181181c306f62c5e93209b4d555717126ec8ce5dcc7de1dcf4283cc43ab4e3f00d3791dec2f46f761f7ccc4536d8d7b5341cdbb46f88135b9a4e3367bfaa3cd3be5425585e61f0de1ec3079015817257551443f918076f446dd7cc8208fd2e7a9adfb77e55f9673df4335a8b5bea873cccccc2ca3c6869b41462edb069f1e9328bfa7cb8d77d96df8e42d6bd7a4a20a30ad047b07b03bda677893a74d55af5109642754a0c880d698006180723bbbdc7f088a42a27090df7e479eda4eca07a6bf1d22592194a5b982d49aed18024a9285fad2b650e7a10e24bd1da36539686862e4405ed91a288fe77629a0cb06f1cfe575950aff06b6bee07999eae200730d8ec873c148d3e620a1869ca59741ac16bf68c54e40edfd777492a7e72588aa56dd7ae436616581852c97f5af998b2e0e138d35585cb95dfc7cb0c1a028a5a897c009e8dd53709195c20103869bf4adb8e868c32ef3bbba5202bc78663fbc69307abe89a43ee6e222705bba342b2ecbf8ce7c2d01fc9c44a245224350172181ca38fa12720e84974b1fbf9f9c59d61b9dd13d55547850f6c952cc18b76fae40bfd65398ed4ce8b2eec49a86ea46355dbf937c04ccdd962fbc4a3ba1808533b4b585698ddb8892ebdd3e0c10c19831a5c9dc50b9579cd8bf6304babb08245727c1c2cde78fba6f52ba19a4f28988b95d0a513640a6b3ade92ff045259c4327937eb5d0a9e507321b2ecfdee7d3b1db82e090d2155aca9d57677e31adaea840389f74d205e896c2840f23c5fd588f5a1bc5be8482c564d287659b83d6f823c1303fcfdad9a24bfadcdb49592d41bca6ee14c822ba688152923981692c71137408500bd5ab8702312f5c09fb30d9c5540c0cd2a9284162c35d94d29607e8bb0835103691cb73e03f2f18fc0832486ce825d56fd8d8d9fd0d259809bb46ea4b1010ce45c85a197679447448c6aa4af731d28a959a2c09ea493911a6c54e3ad0d8c02dc27de903bdc0544815c13e8bc559860c83af9ecf33a40b00036e27b21fb4f3a11feadf1abd01be37e54494db9470b74724706d839969e33ed35e0e466c3e727bd50c1b4010ed9e4b439d5581dc1b37aee0fa049ae0fed2cda8ec7433bbcfc537d2ff201cb51cd5f939b7bce65077e928c4e106d78be3bff0b5fbcc549f5e1fe6a76595ea02a60ff18e3450515aadbbb2b48376d6ff0056e81373f20959105241ef3dc10d447a35614147935622012da31c260afd0226e93bf42d871ec59114c46cf25cdb1dc8d2320aaed63af937f128803fa6d8320e7ff80e0d68e92792d93c0563dea8e0ad66ecb6f1bbee8d3c1e42a593ad1d16584337214b212a16f49f2fdf42df5e37ee6c845fd08345671e8d7ecacb481838299b8307fe98ef3d6724d06e8d81bacc451a3e84c799db9fe2001beec81a25043ef26f069987ed14b8d5334212e85909a803043591e90662cb451cb0dc946f77a3ea9fb80ac7ba5800ddcee3cdfa5e814609891b9f2e966e6e356db09b198f7f4b636466ff8500d51ab8e7dc410bd2a081916bb63acc299d6d1b6e4fc8bb2d443f575a8140afc4c9a7c277ad0dfcb61fd0da4652b1fa87d4a92de2c9e218117114d75bb83819d5d426543a3fe11510e24b519ef2e899d5b87bfc9ef845581d4330cc84203348746a5cb34028fff9edfb9355bd395497378c8495570cf8d94f258944224626e0e5c9cd02dbda08461530b17010aac4768a6a5aaf03078383afa1d6574d40ae8050b590ff0f229df85029f751ab663f349bcbd0dfd1a54f3030d3ab4a4248787f865ae9aa8d8329c6c109610e3b03869adb98b3090fe40e8eed79971a71fa81eef27b524b92cba54fa92a76ee".toArray

      val resultForProvidedCryptogram = ECIES.decrypt[IO](prv, providedCryptogram).unsafeRunSync()
      val cryptogram = ECIES.encrypt[IO](pub, secureRandom, plainText).unsafeRunSync().toArray
      val result = ECIES.decrypt[IO](prv, cryptogram).unsafeRunSync()

      plainText shouldBe resultForProvidedCryptogram.toArray
      plainText shouldBe result.toArray
    }
  }
}
